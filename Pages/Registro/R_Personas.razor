@page "/Persona"
@page "/Persona/{PersonaId:int}"

@inject PersonasBLL personaBLL;


<EditForm Model="persona" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Registro de Persona</h3>
        </div>
        <div class="card-body">

             <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group" >
                            <div class="input-group" style="margin: 22px; ">
                                <span class="input-group-text" style="background-color: #c5c5c550;width: 20%;">ID Persona</span>
                                <InputNumber @bind-Value="persona.PersonaId" class="form-control col-4" />
                                <ValidationMessage For="@(() => persona.PersonaId)" />
                                <div class="input-group-append">
                                    <button type="button" style="z-index: 0;" class="btn btn-primary input-group-text"
                                        @onclick="Buscar"><span class="oi oi-magnifying-glass">Buscar</span></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            <div class="from group">
                <label>Nombre</label>
                <InputText @bind-Value="persona.Nombre" class="form-control"/>
                <ValidationMessage For="@(() => persona.Nombre)"/>
            </div>
      
            <div class="from-group">
                <label>Apellido</label>
                <InputText @bind-Value="persona.Apellido" class="form-control"/>
                <ValidationMessage For="@(() => persona.Apellido)"/>
            </div>
            <div class="from-group">
                <label>Telefono</label>
                <InputText @bind-Value="persona.Telefono" class="form-control"/>
                <ValidationMessage For="@(() => persona.Telefono)"/>
            </div>
            <div class="form-group">
                <label>Cedula</label>
                <InputText @bind-Value="persona.Cedula" class="form-control"/>
                <ValidationMessage For="@(() => persona.Cedula)"/>
            </div>
            <div class="form-group">
                <label>Fecha de Nacimiento</label>
                <InputDate @bind-Value="persona.FechaNacimiento" class="form-control"/>
                <ValidationMessage For="@(() => persona.FechaNacimiento)"/>
            </div>
            <div class="form-group">
                <label>Sexo</label>
                <InputText @bind-Value="persona.Sexo" class="form control"/>
                <ValidationMessage For="@(() => persona.Sexo)"/>
            </div>
            <div class="form-group">
                <label>Estado Civil</label>
                <InputText @bind-Value="persona.EstadoCivil" class="form-control"/>
                <ValidationMessage For="@(() => persona.EstadoCivil)"/>
            </div>
            <div class="form-group">
                <label>Direccion</label>
                <InputText @bind-Value="persona.Direccion" class="form-control"/>
                <ValidationMessage For="@(() => persona.Direccion)"/>
            </div>
        </div>
         <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                 <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>
         </div>
    </div>
</EditForm>
@code{
    [Parameter]
    public int PersonaId { get; set; }
    public Personas persona { get; set; } = new Personas();
  
    
    protected override void OnInitialized()
    {
        if(PersonaId > 0)
       Buscar();
    }
    private void Nuevo()
    {
        persona = new Personas();
    }
    private void Buscar()
    {
        if (persona.PersonaId > 0)
        {
            var encontrado = personaBLL.Buscar(persona.PersonaId);
            Nuevo();
            if (encontrado != null)
                this.persona = encontrado;
            else
            {
                // toast.ShowWarning($"No se ha encontrado la tarea con el id ingresado");
            }

        }
    }
    public void Guardar()
    {
        Console.WriteLine("Se le dio a guardar");
        var guardado = personaBLL.Guardar(persona);
        if (guardado)
        {
            Nuevo();
            //toast.ShowWarning("La tarea se guardo perfectamente)
        }
        else
        {
            // toast.ShowWarning("La tarea no se guardo");
        }
    }
    public void Eliminar()
    {
        bool eliminado;
        eliminado = personaBLL.Eliminar(persona.PersonaId);
        if (eliminado)
        {
            Nuevo();
        }
        else
        {

        }
    }

}